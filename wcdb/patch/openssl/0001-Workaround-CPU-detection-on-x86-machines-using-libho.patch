From d6717d986bce52d421321b6badbd464038501a83 Mon Sep 17 00:00:00 2001
From: johnwhe <johnwhe@tencent.com>
Date: Mon, 15 Aug 2016 16:37:37 +0800
Subject: [PATCH 1/3] Workaround CPU detection on x86 machines using libhoudini
 causes SIGILL and sigsetjmp doesn't work properly.

---
 crypto/armcap.c | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

diff --git a/crypto/armcap.c b/crypto/armcap.c
index 356fa15..9a2489f 100644
--- a/crypto/armcap.c
+++ b/crypto/armcap.c
@@ -84,6 +84,16 @@ static unsigned long (*getauxval) (unsigned long) = NULL;
 #  define HWCAP_CE_SHA256        (1 << 6)
 # endif
 
+#ifdef __ANDROID__
+#include <sys/system_properties.h>
+
+// Works around a bug where Android versions up to and including L don't
+// properly restore the signal mask when asked.
+#define sigsetjmp(env,savesigs) \
+	(sigprocmask(SIG_SETMASK,&ill_act.sa_mask,NULL), \
+	 sigsetjmp(env,savesigs))
+#endif
+
 void OPENSSL_cpuid_setup(void)
 {
     char *e;
@@ -100,6 +110,25 @@ void OPENSSL_cpuid_setup(void)
         return;
     }
 
+#ifdef __ANDROID__
+	/*
+	 * Workaround CPU detection on x86 machines using libhoudini causes SIGILL
+	 * and sigsetjmp doesn't work properly.
+	 */
+	char cpuabi[PROP_VALUE_MAX];
+
+	__system_property_get("ro.product.cpu.abi", cpuabi);
+	cpuabi[PROP_VALUE_MAX - 1] = 0;
+	if (!strcmp(cpuabi, "x86") || !strcmp(cpuabi, "x86_64"))
+	{
+		OPENSSL_armcap_P = ARMV7_NEON;
+		/* or maybe
+		OPENSSL_armcap_P = 0
+		:) */
+		return;
+	}
+#endif
+
     sigfillset(&all_masked);
     sigdelset(&all_masked, SIGILL);
     sigdelset(&all_masked, SIGTRAP);
-- 
2.9.3.windows.3

